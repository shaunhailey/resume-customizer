{"version":3,"sources":["data/skills.ts","data/experience.ts","data/education.ts","components/Dashboard.tsx","pages/Resume.tsx","App.tsx","index.tsx"],"names":["skills","category","items","experienceItems","educationItems","Dashboard","_ref","onSelectionChange","selectedSkills","setSelectedSkills","useState","selectedExperience","setSelectedExperience","selectedEducation","setSelectedEducation","navigate","useNavigate","_jsxs","children","_jsx","map","skillCategory","skill","type","checked","includes","onChange","prev","filter","s","handleSkillChange","item","i","handleExperienceChange","handleEducationChange","onClick","handleSubmit","experience","education","Resume","style","marginLeft","position","top","right","Link","to","App","Router","className","Routes","Route","path","element","selection","rootElement","document","getElementById","ReactDOM","createRoot","render","React","StrictMode"],"mappings":"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","file":"static/js/main.8684a12c.chunk.js","sourcesContent":["export const skills = [\n    {\n        category: 'Programming Languages',\n        items: ['TypeScript', 'JavaScript', 'Ruby', 'CoffeeScript']\n    },\n    {\n        category: 'Frameworks & Libraries',\n        items: ['React.js', 'Ruby on Rails', 'Jest', 'MUI']\n    },\n    {\n        category: 'Testing Tools',\n        items: ['Playwright', 'E2E', 'Jest', 'Rubocop', 'and more']\n    },\n    {\n        category: 'Cloud Platforms',\n        items: ['AWS', 'Google Cloud Platform (GCP)']\n    },\n    {\n        category: 'Development Tools',\n        items: ['GitLab', 'Docker', 'Kubernetes', 'Puppeteer', 'Playwright']\n    },\n    {\n        category: 'Web Development Expertise',\n        items: ['Cross-browser compatibility', 'web applications', 'code refactoring', 'software infrastructure', 'web scraping', 'and more']\n    }\n];","export const experienceItems = ['Software Engineer at Company A', 'Intern at Company B'];","export const educationItems = ['Bachelor of Science in Computer Science', 'Master of Science in Software Engineering'];","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { skills } from '../data/skills';\nimport { experienceItems } from '../data/experience';\nimport { educationItems } from '../data/education';\n\ninterface DashboardProps {\n    onSelectionChange: (selection: {\n        skills: string[];\n        experience: string[];\n        education: string[];\n    }) => void;\n}\n\nconst Dashboard: React.FC<DashboardProps> = ({ onSelectionChange }) => {\n    const [selectedSkills, setSelectedSkills] = useState<string[]>([]);\n    const [selectedExperience, setSelectedExperience] = useState<string[]>([]);\n    const [selectedEducation, setSelectedEducation] = useState<string[]>([]);\n\n    const navigate = useNavigate();\n\n    const handleSkillChange = (skill: string) => {\n        setSelectedSkills((prev) => \n            prev.includes(skill) ? prev.filter(s => s !== skill) : [...prev, skill]\n        );\n    };\n\n    const handleExperienceChange = (item: string) => {\n        setSelectedExperience((prev) => \n            prev.includes(item) ? prev.filter(i => i !== item) : [...prev, item]\n        );\n    };\n\n    const handleEducationChange = (item: string) => {\n        setSelectedEducation((prev) => \n            prev.includes(item) ? prev.filter(i => i !== item) : [...prev, item]\n        );\n    };\n\n    const handleSubmit = () => {\n        onSelectionChange({\n            skills: selectedSkills,\n            experience: selectedExperience,\n            education: selectedEducation,\n        });\n        navigate('/resume');\n    };\n\n    return (\n        <div>\n            <h2>Select Items for Resume</h2>\n            <div>\n                <h3>Skills</h3>\n                {skills.map(skillCategory => (\n                    <div key={skillCategory.category}>\n                        <h4>{skillCategory.category}</h4>\n                        {skillCategory.items.map(skill => (\n                            <label key={skill}>\n                                <input \n                                    type=\"checkbox\" \n                                    checked={selectedSkills.includes(skill)} \n                                    onChange={() => handleSkillChange(skill)} \n                                />\n                                {skill}\n                            </label>\n                        ))}\n                    </div>\n                ))}\n            </div>\n            <div>\n                <h3>Experience</h3>\n                {experienceItems.map(item => (\n                    <label key={item}>\n                        <input \n                            type=\"checkbox\" \n                            checked={selectedExperience.includes(item)} \n                            onChange={() => handleExperienceChange(item)} \n                        />\n                        {item}\n                    </label>\n                ))}\n            </div>\n            <div>\n                <h3>Education</h3>\n                {educationItems.map(item => (\n                    <label key={item}>\n                        <input \n                            type=\"checkbox\" \n                            checked={selectedEducation.includes(item)} \n                            onChange={() => handleEducationChange(item)} \n                        />\n                        {item}\n                    </label>\n                ))}\n            </div>\n            <button onClick={handleSubmit}>Update Resume</button>\n        </div>\n    );\n}\n\ninterface ResumeProps {\n    skills: string[];\n    experience: string[];\n    education: string[];\n}\n\nconst Resume: React.FC<ResumeProps> = ({ skills, experience, education }) => {\n    return (\n        <div>\n            <h2>Resume</h2>\n            <div style={{ position: 'absolute', top: 10, right: 10 }}>\n                <Link to=\"/\">Back to Dashboard</Link>\n            </div>\n            <div>\n                <h3>Skills</h3>\n                <ul>\n                    {skills.map(skill => (\n                        <li key={skill}>{skill}</li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                <h3>Experience</h3>\n                <ul>\n                    {experience.map(item => (\n                        <li key={item}>{item}</li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                <h3>Education</h3>\n                <ul>\n                    {education.map(item => (\n                        <li key={item}>{item}</li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\nexport { Resume };","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface ResumeProps {\n    skills: string[];\n    experience: string[];\n    education: string[];\n}\n\nconst Resume: React.FC<ResumeProps> = ({ skills, experience, education }) => {\n    return (\n        <div style={{ marginLeft: '10px' }}>\n            <h2>Resume</h2>\n            <div style={{ position: 'absolute', top: 10, right: 10 }}>\n                <Link to=\"/\">\n                    <button>Back to Dashboard</button>\n                </Link>\n            </div>\n            <div>\n                <h3>Skills</h3>\n                <ul>\n                    {skills.map(skill => (\n                        <li key={skill}>{skill}</li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                <h3>Experience</h3>\n                <ul>\n                    {experience.map(item => (\n                        <li key={item}>{item}</li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                <h3>Education</h3>\n                <ul>\n                    {education.map(item => (\n                        <li key={item}>{item}</li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default Resume;","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Resume from './pages/Resume';\n\nconst App: React.FC = () => {\n  const [selectedSkills, setSelectedSkills] = useState<string[]>([]);\n  const [selectedExperience, setSelectedExperience] = useState<string[]>([]);\n  const [selectedEducation, setSelectedEducation] = useState<string[]>([]);\n\n  const handleSelectionChange = (selection: {\n    skills: string[];\n    experience: string[];\n    education: string[];\n  }) => {\n    setSelectedSkills(selection.skills);\n    setSelectedExperience(selection.experience);\n    setSelectedEducation(selection.education);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<Dashboard onSelectionChange={handleSelectionChange} />} />\n          <Route path=\"/resume\" element={<Resume skills={selectedSkills} experience={selectedExperience} education={selectedEducation} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './styles/App.css';\n\nconst rootElement = document.getElementById('root');\nif (rootElement) {\n  const root = ReactDOM.createRoot(rootElement);\n  root.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n}"],"sourceRoot":""}